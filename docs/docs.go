// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/Chat/": {
            "get": {
                "description": "輸入他的對話，並將敏感詞移除",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "聊天"
                ],
                "summary": "輸入他的對話，並將敏感詞移除",
                "parameters": [
                    {
                        "type": "string",
                        "description": "對話文字",
                        "name": "message",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.HttpObj"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.HttpObj"
                        }
                    }
                }
            }
        },
        "/Chat/AddSensativeWord/": {
            "post": {
                "description": "新增敏感詞，且用 詞+作用域 來表達完整性 (primary key) \\n ` + "`" + `apply_to` + "`" + ` 目前只對 all 有反應，因此使用 all + 敏感詞即可。 其中 policy 提供兩個方法，replace 則必須在提供 replacement 來供應需要替換的敏感詞字串；obfuscate 則程式自動給出 ***",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "聊天"
                ],
                "summary": "新增敏感詞",
                "parameters": [
                    {
                        "description": "敏感詞的 object",
                        "name": "sensative_word",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SensativeWords"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SensativeWords"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.HttpObj"
                        }
                    }
                }
            }
        },
        "/Chat/Analytics/": {
            "get": {
                "description": "輸出每個人的敏感詞使用紀錄",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "聊天"
                ],
                "summary": "輸出每個人的敏感詞使用紀錄",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.UserAnalyticsObj"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.HttpObj"
                        }
                    }
                }
            }
        },
        "/Chat/DeleteSensativeWord/": {
            "post": {
                "description": "刪除敏感詞，且用 詞+作用域 來表達唯一性 (primary key)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "聊天"
                ],
                "summary": "刪除敏感詞",
                "parameters": [
                    {
                        "description": "敏感詞的 object",
                        "name": "sensative_word",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SensativeWords"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.SensativeWords"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controller.HttpObj"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.HttpObj": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                },
                "success": {
                    "type": "string"
                }
            }
        },
        "controller.UserAnalyticsObj": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "sender": {
                    "type": "string"
                }
            }
        },
        "models.SensativeWords": {
            "type": "object",
            "required": [
                "apply_to",
                "sensative_words"
            ],
            "properties": {
                "apply_to": {
                    "description": "這兩個已經做移除",
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "policy": {
                    "type": "string"
                },
                "replacement": {
                    "type": "string"
                },
                "sensative_words": {
                    "description": "這兩個已經做移除",
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "使用 MQTTX 聊天，並過濾敏感字",
	Description:      "使用 MQTT(websocket) + MongoDB 基本操作",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
